# Global labels for all resources
global:
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "1.0.0"

replicaCount: 2

image:
  repository: myapp/image
  tag: "1.0.0"
  pullPolicy: IfNotPresent

imagePullSecrets: []
# Example: [ { name: myregistrykey } ]

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 2000

securityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: "nginx"
  annotations: {}
  hosts:
    - host: myapp.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  # - secretName: myapp-tls
  #   hosts:
  #     - myapp.local

resources:
  limits:
    cpu: "500m"
    memory: "256Mi"
  requests:
    cpu: "200m"
    memory: "128Mi"

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 75

livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /ready
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 3

nodeSelector: {}
tolerations: []
affinity: {}

config:
  logLevel: info
  enableFeatureX: true
  maxConnections: 100

env:
  - name: ENVIRONMENT
    value: "production"
  - name: LOG_FORMAT
    value: "json"

volumes: []
volumeMounts: []

# Optional secrets
secretEnv: []
# Example:
# - name: DB_PASSWORD
#   secretName: myapp-secrets
#   key: db-password
